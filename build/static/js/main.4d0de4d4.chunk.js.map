{"version":3,"sources":["Filter.js","Services/PersonService.js","PersonForm.js","Person.js","Persons.js","Notification.js","App.js","index.js"],"names":["Filter","searchTerm","setSearchTerm","value","onChange","event","target","baseUrl","PersonService","getAll","axios","get","then","res","data","create","newPerson","post","deletePerson","id","delete","updatePerson","person","put","PersonForm","newName","newNumber","setName","setNumber","persons","setPersons","setNotification","onSubmit","preventDefault","personAlreadyAdded","find","name","window","confirm","personToUpdate","number","setTimeout","map","p","Math","max","concat","createPerson","type","Person","onClick","Persons","catch","filter","toUpperCase","includes","Notification","message","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","App","useState","setNewName","setNewNumber","notification","useEffect","filterString","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4d0de4d4.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = ({searchTerm, setSearchTerm}) => {   \r\n\r\n  const onChangeHandlerSearch = (event) => {\r\n    setSearchTerm(event.target.value)\r\n  }\r\n\r\n    return (\r\n        <div>\r\n        filter shown with: <input value={searchTerm} onChange={onChangeHandlerSearch}></input>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Filter\r\n","import axios from 'axios'\r\n\r\nconst baseUrl = 'api/persons'\r\n\r\nconst getAll = () => {\r\n    return axios.get(baseUrl).then(res => res.data)\r\n}\r\n\r\nconst create = newPerson => {\r\n    return axios.post(baseUrl, newPerson).then(res => res.data)\r\n}\r\n\r\nconst deletePerson = id => {\r\n    return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nconst updatePerson = (person) => {\r\n    return axios.put(`${baseUrl}/${person.id}`, person).then(res => res.data)\r\n}\r\n\r\nconst PersonService = { getAll, create, deletePerson, updatePerson }\r\n\r\nexport default PersonService","import React from 'react'\r\nimport PersonService from './Services/PersonService'\r\n\r\nconst PersonForm = ({ newName, newNumber, setName, setNumber, persons, setPersons, setNotification }) => {\r\n\r\n    const nameHandler = (event) => {\r\n        setName(event.target.value)\r\n    }\r\n\r\n    const numberHandler = (event) => {\r\n        setNumber(event.target.value)\r\n    }\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault()\r\n\r\n        const updatePerson = () => {\r\n            window.confirm(`${newName} is already added to phonebook. Replace the old number with a new one?`)\r\n\r\n            const personToUpdate = { ...personAlreadyAdded, number: newNumber }\r\n\r\n            PersonService.updatePerson(personToUpdate).then(res => {\r\n                setNotification(`Updated ${personToUpdate.name}`, 'success')\r\n\r\n                setTimeout(() => {\r\n                    setNotification(null)\r\n                }, 5000)\r\n\r\n                setPersons(persons.map(p => p.id !== personToUpdate.id ? p : res))\r\n            }, () => {\r\n                setNotification(`Information of ${personToUpdate.name} has already been removed from the server`, 'error')\r\n\r\n                setTimeout(() => {\r\n                    setNotification(null)\r\n                }, 5000)\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        const createPerson = () => {\r\n            const generateId = () => Math.max(...persons.map(person => person.id)) + 1\r\n\r\n            const newPerson = { id: generateId(), name: newName, number: newNumber }\r\n\r\n            PersonService.create(newPerson).then(res => {\r\n\r\n                setNotification(`Added ${newPerson.name}`, 'success')\r\n\r\n                setTimeout(() => {\r\n                    setNotification(null)\r\n                }, 5000)\r\n\r\n                setPersons(persons.concat(res))\r\n            })\r\n        }\r\n\r\n        const personAlreadyAdded = persons.find(person => person.name === newName)\r\n\r\n        if (personAlreadyAdded) {\r\n            updatePerson(personAlreadyAdded)\r\n            return\r\n        }\r\n\r\n        createPerson()\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={submitHandler}>\r\n            <div>\r\n                name: <input value={newName} onChange={nameHandler} />\r\n            </div>\r\n            <div>\r\n                number: <input value={newNumber} onChange={numberHandler} />\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default PersonForm\r\n","import React from 'react'\r\n\r\nconst Person = ({ person, deletePerson }) => {\r\n\r\n    return (\r\n        <div>\r\n            <li>{person.name}: {person.number} <button onClick={() => deletePerson(person)}>Delete</button></li> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Person\r\n","import React from 'react'\r\nimport Person from './Person'\r\nimport PersonService from './Services/PersonService'\r\n\r\nconst Persons = ({ persons, searchTerm, setPersons, setNotification }) => {\r\n\r\n    const deletePerson = (person) => {\r\n        window.confirm(`Delete ${person.name}?`)\r\n\r\n        PersonService.deletePerson(person.id).catch(() => {\r\n            setNotification(`Information of ${person.name} has already been from server`, 'error')\r\n\r\n            setTimeout(() => {\r\n                setNotification(null)\r\n            }, 5000)\r\n\r\n            setPersons(persons.filter(p => p.id !== person.id))\r\n        })\r\n    }\r\n    return (\r\n        persons.map(person => {\r\n            if (person.name.toUpperCase().includes(searchTerm.toUpperCase())) {\r\n                return <div key={person.id}>\r\n                    <Person person={person} setPersons={setPersons} deletePerson={deletePerson}></Person>\r\n                </div>\r\n            }\r\n\r\n            return ''\r\n        }\r\n        )\r\n    )\r\n}\r\n\r\nexport default Persons\r\n","import React from 'react'\r\n\r\nconst Notification = ({ message, type }) => {\r\n\r\n    const succcess = {\r\n        color: 'green',\r\n        background: 'lightgrey',\r\n        fontSize: '20px',\r\n        borderStyle: 'solid',\r\n        borderRadius: '5px',\r\n        padding: '10px',\r\n        marginBottom: '10px'\r\n    }\r\n\r\n    const error = {\r\n        color: 'red',\r\n        background: 'lightgrey',\r\n        fontSize: '20px',\r\n        borderStyle: 'solid',\r\n        borderRadius: '5px',\r\n        padding: '10px',\r\n        marginBottom: '10px'\r\n    }\r\n\r\n    if (!message) return null\r\n\r\n    return (\r\n        <div style={type === 'success' ? succcess : error}>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification\r\n","import React, { useState, useEffect } from 'react'\nimport Filter from './Filter'\nimport PersonForm from './PersonForm'\nimport Persons from './Persons'\nimport PersonService from './Services/PersonService'\nimport Notification from './Notification'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [searchTerm, setSearchTerm] = useState('')\n  const [notification, setNotification] = useState(null, 'success')\n\n  useEffect(() => {\n    PersonService.getAll().then(res => setPersons(res))\n  }, [])\n\n  return (\n    <div>\n      <Notification message={notification}></Notification>\n      <h2>Phonebook</h2>\n      <Filter filterString={searchTerm} setSearchTerm={setSearchTerm}></Filter>\n      <PersonForm newName={newName}\n        setName={setNewName}\n        newNumber={newNumber}\n        setNumber={setNewNumber}\n        persons={persons}\n        setPersons={setPersons}\n        setNotification={setNotification}>\n      </PersonForm>\n      <h2>Numbers</h2>\n      <Persons persons={persons} searchTerm={searchTerm} setPersons={setPersons} setNotification={setNotification}></Persons>\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}